[{"C:\\Deplayment\\chaterFrontend\\src\\index.js":"1","C:\\Deplayment\\chaterFrontend\\src\\reportWebVitals.js":"2","C:\\Deplayment\\chaterFrontend\\src\\App.js":"3","C:\\Deplayment\\chaterFrontend\\src\\components\\ImageUploadForm.jsx":"4","C:\\Deplayment\\chaterFrontend\\src\\components\\Register.jsx":"5","C:\\Deplayment\\chaterFrontend\\src\\components\\Dashboard.jsx":"6","C:\\Deplayment\\chaterFrontend\\src\\components\\Forgotpassword.jsx":"7","C:\\Deplayment\\chaterFrontend\\src\\components\\Login.jsx":"8","C:\\Deplayment\\chaterFrontend\\src\\components\\Naber.jsx":"9","C:\\Deplayment\\chaterFrontend\\src\\components\\Modal.jsx":"10","C:\\Deplayment\\chaterFrontend\\src\\components\\ChateBox.jsx":"11","C:\\Deplayment\\chaterFrontend\\src\\components\\Tabs.jsx":"12"},{"size":492,"mtime":1682922309863,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1681293126092,"results":"15","hashOfConfig":"14"},{"size":813,"mtime":1684652879837,"results":"16","hashOfConfig":"14"},{"size":985,"mtime":1684653012753,"results":"17","hashOfConfig":"14"},{"size":8215,"mtime":1682487701300,"results":"18","hashOfConfig":"14"},{"size":4865,"mtime":1701065930701,"results":"19","hashOfConfig":"14"},{"size":4789,"mtime":1681451549816,"results":"20","hashOfConfig":"14"},{"size":5064,"mtime":1701065296169,"results":"21","hashOfConfig":"14"},{"size":5625,"mtime":1686545154594,"results":"22","hashOfConfig":"14"},{"size":16283,"mtime":1686296244138,"results":"23","hashOfConfig":"14"},{"size":15978,"mtime":1701067509307,"results":"24","hashOfConfig":"14"},{"size":19585,"mtime":1701065386606,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1ihm66b",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Deplayment\\chaterFrontend\\src\\index.js",[],[],[],"C:\\Deplayment\\chaterFrontend\\src\\reportWebVitals.js",[],[],"C:\\Deplayment\\chaterFrontend\\src\\App.js",["69"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Forgotpassword from './components/Forgotpassword';\nimport Dashboard from './components/Dashboard';\nimport ImageUploadForm from './components/ImageUploadForm';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" Component={Login} />\n          <Route path=\"/register\" Component={Register}/>\n          <Route path=\"/forget-password\" Component={Forgotpassword}/>\n          <Route path=\"/dashboard\" Component={Dashboard}/>\n          <Route path=\"/test\" Component={ImageUploadForm}/>\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Deplayment\\chaterFrontend\\src\\components\\ImageUploadForm.jsx",["70"],[],"import React, { useState } from 'react';\r\n\r\nfunction ImageUploadForm() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Prevents the default form submission\r\n\r\n    if (selectedImage) {\r\n      const formData = new FormData();\r\n      formData.append('avatar', selectedImage);  \r\n\r\n      try {\r\n        const response = await fetch('/api/uploadprofilepic', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        // Handle the response here\r\n      } catch (error) {\r\n        // Handle any errors that occurred during the request\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    setSelectedImage(event.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      <button type=\"submit\">Upload</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ImageUploadForm;","C:\\Deplayment\\chaterFrontend\\src\\components\\Register.jsx",["71","72","73","74","75","76","77","78","79","80","81"],[],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelope, faHeart, faLock, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport * as EmailValidator from 'email-validator';\r\nimport Swal from 'sweetalert2'\r\nimport { useNavigate  } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n  let validate = ['email','username','fullname','password','cpassword'];\r\n  let isValid = true;\r\n  let [userData , setUserData] = useState({\r\n    email    :\"\",\r\n    username :\"\",\r\n    fullname :\"\",\r\n    password :\"\",\r\n    cpassword:\"\"\r\n  });\r\n  let navigate = useNavigate();\r\n\r\n  const inputValue =  (e) =>{\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if(name == \"email\"){\r\n      if(!EmailValidator.validate(value) && value != ''){\r\n        document.getElementById(\"email\").classList.add(\"is-invalid\");\r\n        document.getElementById(\"email\").nextSibling.innerHTML = \"Email is not valid\";\r\n      }\r\n      else{\r\n        if(value != '')       \r\n            document.getElementById(\"email\").classList.remove(\"is-invalid\");\r\n        document.getElementById(\"email\").nextSibling.innerHTML = \"Required\";\r\n      }\r\n    }\r\n    if(name == \"cpassword\"){\r\n      console.log(value ,userData.password)\r\n      if(value != userData.password){\r\n        document.getElementById(\"cpassword\").classList.add(\"is-invalid\");\r\n        document.getElementById(\"cpassword\").nextSibling.innerHTML = \"Confirm password not match\";\r\n      }\r\n      else{\r\n        if(value != '')       \r\n             document.getElementById(\"cpassword\").classList.remove(\"is-invalid\");\r\n        document.getElementById(\"cpassword\").nextSibling.innerHTML = \"Required\";\r\n      }\r\n    }\r\n    setUserData({...userData,[name]:value})\r\n  }\r\n  \r\n  const saveUser =  (e) =>{\r\n    e.preventDefault();\r\n    validation();\r\n    console.log(userData)\r\n    if(isValid){\r\n      fetch('/api/register',{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify(userData)\r\n      }).then(async (res)=>{\r\n        if(res.status != 500){\r\n          Swal.fire({\r\n            title: 'success',\r\n            text: 'You hed be register',\r\n            icon: 'success',\r\n            confirmButtonText: 'Cool',\r\n            confirmButtonText:`Login`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              navigate('/');\r\n            } \r\n          })\r\n        }\r\n        else{     \r\n          res = await res.json()    \r\n          Swal.fire({\r\n            title: 'Oops...',\r\n            text: res.error,\r\n            icon: 'error',\r\n            confirmButtonText: 'Cool',\r\n            confirmButtonText:`Retry`,\r\n          })\r\n        }\r\n      })\r\n    };\r\n  };\r\n\r\n  const validation = () =>{\r\n    isValid = true;\r\n    validate.forEach((e,i)=>{\r\n      if(document.getElementById(e).value == ''){\r\n        document.getElementById(e).classList.add(\"is-invalid\");\r\n        isValid = false;\r\n      }\r\n      else{\r\n        document.getElementById(e).classList.remove(\"is-invalid\");\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n        <div class=\"account-pages  \">\r\n      <div class=\"container\">\r\n        <div class=\"justify-content-center row\">\r\n          <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n            <div class=\"text-center mb-3\"><a class=\"auth-logo mb-3 d-block\" href=\"/\"></a>\r\n              <h4>Sign up</h4>\r\n              <p class=\"text-muted mb-3\">Get your Chatter account now.</p>\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"p-4 card-body\">\r\n                <div class=\"p-3\">\r\n                  <form  onSubmit={saveUser} class=\"\">\r\n                    <div class=\"mb-3\"><label class=\"form-label form-label\">Email</label>\r\n                      <div class=\"input-group bg-soft-light rounded-3 mb-3 input-group\">\r\n                        <span class=\"input-group-text text-muted\"><FontAwesomeIcon icon={faEnvelope} /></span><input id=\"email\"\r\n                          name=\"email\" placeholder=\"Enter Email\" type=\"text\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" onChange={inputValue} value={userData.email}/>\r\n                          <div type=\"invalid\" class=\"invalid-feedback\">Required</div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"mb-3\"><label class=\"form-label form-label\">Username</label>\r\n                      <div class=\"mb-3 bg-soft-light input-group-lg rounded-lg input-group\"><span\r\n                          class=\"input-group-text border-light text-muted\"><FontAwesomeIcon icon={faUser} /></span><input\r\n                          id=\"username\" name=\"username\" placeholder=\"Enter Username\" type=\"text\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" onChange={inputValue} value={userData.username}/>\r\n                          <div type=\"invalid\" class=\"invalid-feedback\">Required</div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"mb-3\"><label class=\"form-label form-label\">Full Name</label>\r\n                      <div class=\"mb-3 bg-soft-light input-group-lg rounded-lg input-group\"><span\r\n                          class=\"input-group-text border-light text-muted\"><FontAwesomeIcon icon={faUser} /></span><input\r\n                          id=\"fullname\" name=\"fullname\" placeholder=\"Enter Full Name\" type=\"text\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" onChange={inputValue} value={userData.fullname}/>\r\n                          <div type=\"invalid\" class=\"invalid-feedback\">Required</div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"mb-4 mb-3\"><label class=\"form-label form-label\">Password</label>\r\n                      <div class=\"mb-3 bg-soft-light input-group-lg rounded-lg input-group\"><span\r\n                          class=\"input-group-text border-light text-muted\"><FontAwesomeIcon icon={faLock} /></span><input\r\n                          id=\"password\" name=\"password\" placeholder=\"Enter Password\" type=\"password\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" onChange={inputValue} value={userData.password}/>\r\n                          <div type=\"invalid\" class=\"invalid-feedback\">Required</div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"mb-3 mb-3\"><label class=\"form-label form-label\">Confirm Password</label>\r\n                      <div class=\"mb-3 bg-soft-light input-group-lg rounded-lg input-group\"><span\r\n                          class=\"input-group-text border-light text-muted\"><FontAwesomeIcon icon={faLock} /></span><input\r\n                          id=\"cpassword\" name=\"cpassword\" placeholder=\"Enter Confirm Password\" type=\"password\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" onChange={inputValue} value={userData.cpassword}/>\r\n                          <div type=\"invalid\" class=\"invalid-feedback\">Required</div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-grid\"><button type=\"submit\"\r\n                        class=\" waves-effect waves-light btn btn-primary d-block w-100\" >Sign up</button></div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\" text-center\">\r\n              <p>Already have an account ? <Link class=\"font-weight-medium text-primary\" to=\"/\"> Signin </Link> </p>\r\n              <p>© 2023 Chatter with <FontAwesomeIcon icon={faHeart} style={{color: \"#a32424\",}} /> by Pranit Uchil</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","C:\\Deplayment\\chaterFrontend\\src\\components\\Dashboard.jsx",["82","83","84","85"],[],"C:\\Deplayment\\chaterFrontend\\src\\components\\Forgotpassword.jsx",["86","87","88"],[],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelope, faHeart, faLock, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Forgotpassword() {\r\n  const [cardTitle , setCardTitle] = useState({\r\n    titleOne : 'Reset Password',\r\n    titleTwo : 'We will send OTP to your email address',\r\n    cardOne  : 'card',\r\n    cardTwo  : 'card d-none',\r\n    btnText  : 'Send OTP'\r\n  });\r\n\r\n  const sendOTP = (e) =>{\r\n    e.preventDefault();\r\n    setCardTitle({\r\n      titleOne : 'Enter OTP',\r\n      titleTwo : 'We had send OTP to your email address',\r\n      cardOne  : 'card d-none',\r\n      cardTwo  : 'card',\r\n      btnText  : 'Reset Password'\r\n    });\r\n\r\n  }\r\n  return (\r\n    <>\r\n        <div class=\"account-pages  pt-sm-5\">\r\n      <div class=\"container\">\r\n        <div class=\"justify-content-center row\">\r\n          <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n            <div class=\"text-center mb-4\"><a class=\"auth-logo mb-5 d-block\" href=\"/\"></a>\r\n              <h4>{cardTitle.titleOne}</h4>\r\n              <p class=\"text-muted mb-4\">{cardTitle.titleTwo}</p>\r\n            </div>\r\n            <div class={cardTitle.cardOne}>\r\n              <div class=\"p-4 card-body\">\r\n                <div class=\"p-3\">\r\n                  <form class=\"\">\r\n                    <div class=\"mb-3\"><label class=\"form-label form-label\">Email</label>\r\n                      <div class=\"input-group bg-soft-light rounded-3 mb-3 input-group\"><span\r\n                          class=\"input-group-text text-muted\"><FontAwesomeIcon icon={faEnvelope} /></span><input id=\"email\"\r\n                          name=\"email\" placeholder=\"Enter Email\" type=\"text\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" value=\"\"/></div>\r\n                    </div>\r\n                    <div class=\"mb-3\"><label class=\"form-label form-label\">Password</label>\r\n                      <div class=\"mb-3 bg-soft-light input-group-lg rounded-lg input-group\"><span\r\n                          class=\"input-group-text border-light text-muted\"><FontAwesomeIcon icon={faLock} /></span><input\r\n                          id=\"username\" name=\"username\" placeholder=\"Enter Password\" type=\"text\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" value=\"\"/></div>\r\n                    </div>\r\n                    <div class=\"mb-4 mb-3\"><label class=\"form-label form-label\">Comfirm Password</label>\r\n                      <div class=\"mb-3 bg-soft-light input-group-lg rounded-lg input-group\"><span\r\n                          class=\"input-group-text border-light text-muted\"><FontAwesomeIcon icon={faLock} /></span><input\r\n                          id=\"password\" name=\"password\" placeholder=\"Enter Comfirm Password\" type=\"password\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" value=\"\"/></div>\r\n                    </div>\r\n                    <div class=\"d-grid\"><button type=\"submit\"\r\n                        class=\" waves-effect waves-light btn btn-primary d-block w-100\" onClick={sendOTP}>Send OTP</button></div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class={cardTitle.cardTwo}>\r\n              <div class=\"p-4 card-body\">\r\n                <div class=\"p-3\">\r\n                  <form class=\"\">\r\n                    <div class=\"mb-3\"><label class=\"form-label form-label\">OTP</label>\r\n                      <div class=\"input-group bg-soft-light rounded-3 mb-3 input-group\"><span\r\n                          class=\"input-group-text text-muted\"><FontAwesomeIcon icon={faLock} /></span><input id=\"email\"\r\n                          name=\"number\" placeholder=\"Enter OTP\" type=\"text\"\r\n                          class=\"form-control form-control-lg bg-soft-light border-light form-control\"\r\n                          aria-invalid=\"false\" value=\"\"/></div>\r\n                    </div>\r\n                    <div class=\"d-grid\"><button \r\n                        class=\" waves-effect waves-light btn btn-primary d-block w-100\" onClick={sendOTP}>{cardTitle.btnText}</button></div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-5 text-center\">\r\n              <p>© 2023 Chatter with <FontAwesomeIcon icon={faHeart} style={{color: \"#a32424\",}} /> by Pranit Uchil</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Forgotpassword\r\n","C:\\Deplayment\\chaterFrontend\\src\\components\\Login.jsx",["89","90","91","92","93"],[],"C:\\Deplayment\\chaterFrontend\\src\\components\\Naber.jsx",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],[],"import React, { createContext, useContext, useRef, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faComment, faMoon, faUser, faSun, faPen, faArrowLeft, faUserGroup, faMagnifyingGlass, faRightFromBracket } from '@fortawesome/free-solid-svg-icons'\r\nimport { UserContext } from './Dashboard';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst Naber = ({ navActive, setnavActive, setNightAndDarkMode, nightDarkMode }) => {\r\n    const user = useContext(UserContext);\r\n    const divRef = useRef(null);\r\n    const showLogoutDropdow = (a) => {\r\n        if (document.getElementById(\"profile_dropdwn\").classList.contains(\"show\"))\r\n            if(a == undefined)\r\n                document.getElementById(\"profile_dropdwn\").classList.remove('show')\r\n            else{\r\n                setTimeout(() => {\r\n                    try {\r\n                        document.getElementById(\"profile_dropdwn\").classList.remove('show');           \r\n                    } catch (error) {\r\n                        // console.log(error)\r\n                    }\r\n                }, 100);\r\n            }\r\n        else\r\n            document.getElementById(\"profile_dropdwn\").classList.add('show')\r\n    }\r\n    let navigate = useNavigate();\r\n    const logout = () =>{\r\n        fetch(\"/api/logout\",{\r\n            method:'GET',\r\n            headers:{\r\n                \"Content-Type\":\"application-json\"\r\n            }\r\n        }).then((res)=>{\r\n            if(res.status == 200){\r\n                navigate('/');\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div class=\"side-menu flex-lg-column me-lg-1\">\r\n                <div class=\"navbar-brand-box\">\r\n                    <a class=\"logo logo-dark\" to=\"/\">\r\n                        <span class=\"logo-sm\">\r\n                            <img src=\"http://chatvia-light.react.themesbrand.com/static/media/logo.e41f6087382055646c1c02d0a63583d5.svg\" alt=\"logo\" height=\"30\" />\r\n                        </span>\r\n                    </a>\r\n                    <a class=\"logo logo-light\" to=\"/\">\r\n                        <span class=\"logo-sm\">\r\n                            <img src=\"http://chatvia-light.react.themesbrand.com/static/media/logo.e41f6087382055646c1c02d0a63583d5.svg\" alt=\"logo\" height=\"30\" />\r\n                        </span>\r\n                    </a>\r\n                </div>\r\n                <div class=\"flex-lg-column\">\r\n                    <ul role=\"tablist\" class=\"side-menu-nav justify-content-center nav nav-pills\">\r\n                        <li id=\"profile\" class=\"nav-item\">\r\n                            <a id=\"pills-user-tab\" onClick={() => { setnavActive({ navUser: \"active nav-link\", navChat: \"nav-link\", navFriends: \"nav-link\", tapUser: \"tab-pane active\", tapChat: \"tab-pane\", tapFirends: \"tab-pane\" }) }} class={navActive.navUser}>\r\n                                <FontAwesomeIcon icon={faUser} />\r\n                            </a>\r\n                        </li>\r\n                        <li id=\"Chats\" class=\"nav-item\">\r\n                            <a id=\"pills-chat-tab\" onClick={() => { setnavActive({ navUser: \"nav-link\", navChat: \"active nav-link\", navFriends: \"nav-link\", tapUser: \"tab-pane\", tapChat: \"tab-pane active\", tapFirends: \"tab-pane\" }) }} class={navActive.navChat}>\r\n                                <FontAwesomeIcon icon={faComment} />\r\n                            </a>\r\n                        </li>\r\n                        <li id=\"Friends\" class=\"nav-item\">\r\n                            <a id=\"pills-firiends-tab\" onClick={() => { setnavActive({ navUser: \"nav-link\", navChat: \"nav-link\", navFriends: \"active nav-link\", tapUser: \"tab-pane\", tapChat: \"tab-pane\", tapFirends: \"tab-pane active\" }) }} class={navActive.navFriends}>\r\n                                <FontAwesomeIcon icon={faUserGroup} />\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a id=\"light-dark\" onClick={() => { setNightAndDarkMode(faSun) }} class=\"nav-link\">\r\n                                <FontAwesomeIcon icon={nightDarkMode} />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"flex-lg-column d-none d-lg-block\">\r\n                    <ul class=\"side-menu-nav justify-content-center nav\" >\r\n                        <li class=\"nav-item btn-group dropup profile-user-dropdown dropdown  nav-item\"   ><a tabIndex={0} ref={divRef} onBlur={() => showLogoutDropdow('close')} onClick={() => showLogoutDropdow()}  aria-haspopup=\"true\" class=\"nav-link\" aria-expanded=\"false\"><img id=\"nav_profile_pic\"  src={user.userData.profilepic} alt=\"\" class=\"profile-user rounded-circle\" /></a>\r\n                            <div id=\"profile_dropdwn\"  role=\"menu\" aria-hidden=\"true\" class=\"dropdown-menu\">\r\n                            <button onClick={() => { setnavActive({ navUser: \"active nav-link\", navChat: \"nav-link\", navFriends: \"nav-link\", tapUser: \"tab-pane active\", tapChat: \"tab-pane\", tapFirends: \"tab-pane\" })}} type=\"button\" role=\"menuitem\" class=\"dropdown-item\">Profile <FontAwesomeIcon icon={faUser} />\r\n                            </button>\r\n                            <div tabindex=\"0\" class=\"dropdown-divider\"></div><a  onClick={()=>{logout()}} role=\"menuitem\" class=\"dropdown-item\">Log out <FontAwesomeIcon icon={faRightFromBracket} /></a>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Naber\r\n","C:\\Deplayment\\chaterFrontend\\src\\components\\Modal.jsx",["110","111","112","113","114","115","116","117","118","119","120","121"],[],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faXmark } from '@fortawesome/free-solid-svg-icons'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport ReactDOM from 'react-dom'\r\nimport { UserContext } from './Dashboard'\r\nimport { Link, json } from 'react-router-dom'\r\nimport io from \"socket.io-client\"\r\nconst ENDPOINT = 'localhost:5000'\r\nvar socket\r\nconst Modal = ({ modal, userInfor }) => {\r\n    const user = useContext(UserContext);\r\n    \r\n    useEffect(() => {\r\n        setModalClasses({\r\n            classOne: 'modal fade show',\r\n            classTwo: 'modal-backdrop fade show',\r\n        });\r\n    }, [])\r\n    const [modalClasses, setModalClasses] = useState({\r\n        classOne: 'modal fade',\r\n        classTwo: 'modal-backdrop fade',\r\n    })\r\n    const closeModal = () => {\r\n        setModalClasses({\r\n            classOne: 'modal fade',\r\n            classTwo: 'modal-backdrop fade',\r\n        });\r\n        setTimeout(() => {\r\n            modal(false)\r\n        }, 300);\r\n    }\r\n    const sendFriendRequest = async () => {\r\n        let userFound = false;\r\n        let firendRequest = false;\r\n        user.userData.friends.forEach(element => {\r\n            if(element._id == userInfor.userId){\r\n                userFound = true;\r\n            }\r\n        });\r\n        console.log(user.userData.friends,userInfor.userId,userFound)\r\n        await fetch('/api/searchfriendrequest',{\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ id: userInfor.userId})\r\n        }).then(async(res)=>{\r\n            res = await res.json();\r\n            console.log(res)\r\n            if(res.message == 'Requset there'){\r\n                firendRequest =  true\r\n            }\r\n            if(!userFound && !firendRequest){\r\n                let res = await fetch(\"/api/sendfriendrequest\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({ id: userInfor.userId})\r\n                })\r\n                if (res.status == 200) {\r\n                    closeModal();\r\n                    socket = io(ENDPOINT);\r\n                    socket.emit('friend request send',userInfor.userId)\r\n                    user.getUserInfo();\r\n                    Swal.fire({\r\n                        position: 'top-end',\r\n                        icon: 'success',\r\n                        title: 'Friend request has be send',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                }\r\n                else {\r\n                    res = await res.json()\r\n                    Swal.fire({\r\n                        title: 'Oops...',\r\n                        text: res.error,\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Cool',\r\n                        confirmButtonText: `Retry`,\r\n                    })\r\n                }\r\n            }\r\n            else{\r\n                closeModal();\r\n                // console.log(userFound,)\r\n               \r\n                if(firendRequest){\r\n                    Swal.fire({\r\n                        title: 'Oops...',\r\n                        text: 'You already sended firend request to this user',\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Cool',\r\n                        confirmButtonText: `Retry`,\r\n                    });\r\n                }\r\n                if(userFound){\r\n                    Swal.fire({\r\n                        title: 'Oops...',\r\n                        text: 'This user already your firend',\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Cool',\r\n                        confirmButtonText: `Retry`,\r\n                    })     \r\n                }\r\n                \r\n            }\r\n        })\r\n       \r\n    }\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <div tabindex=\"-1\" style={{ \"position\": \"relative\", \"zIndex\": \"1050\", \"display\": \" block\" }} onClick={() => closeModal()}>\r\n                <div class=\"\" >\r\n                    <div class={modalClasses.classOne} role=\"dialog\" tabindex=\"-1\" style={{ \"display\": \"block\" }}  >\r\n                        <div tabindex=\"-1\" class=\"modal-dialog modal-dialog-centered\" role=\"document\" onClick={e => e.stopPropagation()}>\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-body\">\r\n                                    <div class=\"text-center p-4\">\r\n                                        <div class=\"avatar-lg mx-auto mb-4\">\r\n                                            <img src={userInfor.profilepic} alt=\"\" class=\"img-thumbnail rounded-circle\" /></div>\r\n                                        <h5 class=\"text-truncate\">{userInfor.fullname}</h5>\r\n                                        <p class=\"text-muted\">Send Friend Request</p>\r\n                                        <div class=\"mt-5\">\r\n                                            <ul class=\"list-inline mb-1\">\r\n                                                <li class=\"list-inline-item px-2 me-2 ms-0\"><button onClick={() => {\r\n                                                    setModalClasses({\r\n                                                        classOne: 'modal fade',\r\n                                                        classTwo: 'modal-backdrop fade',\r\n                                                    });\r\n                                                    setTimeout(() => {\r\n                                                        modal(false)\r\n                                                    }, 300);\r\n                                                }} type=\"button\"\r\n                                                    class=\"btn btn-danger avatar-sm rounded-circle\"><span\r\n                                                        class=\"avatar-title bg-transparent font-size-20\"><FontAwesomeIcon icon={faXmark} /></span></button></li>\r\n                                                <li class=\"list-inline-item px-2\"><button type=\"button\" onClick={sendFriendRequest}\r\n                                                    class=\"btn btn-success avatar-sm rounded-circle\"><span\r\n                                                        class=\"avatar-title bg-transparent font-size-20\"><FontAwesomeIcon icon={faCheck} /></span></button></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class={modalClasses.classTwo}></div>\r\n                </div>\r\n            </div>\r\n        </>, document.body\r\n    )\r\n}\r\n\r\nconst FriendRequests = ({ id, username, fullname,closeModal,getChates}) => {\r\n    const user = useContext(UserContext);\r\n    console.log(user)\r\n    const accpetFirendRequset = async (id) =>{\r\n        let res = await fetch(\"/api/accpectfriendrequest\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ id:id })\r\n        })\r\n        if(res.status == 200){\r\n            Swal.fire({\r\n                position: 'top-end',\r\n                icon: 'success',\r\n                title: 'Friend request has be accpeted',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n            getChates();\r\n            socket = io(ENDPOINT);\r\n            socket.emit(\"friend request accpect\",user.userData,id)\r\n        }\r\n        res = await res.json();\r\n        if(user.userData.friendsrequests.length == 1){\r\n            closeModal()\r\n        }\r\n        user.getUserInfo();\r\n    }\r\n\r\n    const rejectFirendRequset = async () =>{\r\n        let res = await fetch(\"/api/rejectfriendrequest\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ id:id })\r\n        })\r\n        if(res.status == 200){\r\n            Swal.fire({\r\n                position: 'top-end',\r\n                icon: 'success',\r\n                title: 'Friend request has be rejected',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        }\r\n        res = await res.json();\r\n        user.getUserInfo();\r\n    }\r\n    return <>\r\n        <li><Link to=\"/dashboard\">\r\n            <div class=\"d-flex align-items-center mt-2\">\r\n                <div class=\"chat-user-img me-3 ms-0\">\r\n                    <div class=\"chat-user-img away align-self-center me-3 ms-0\"><img\r\n                        class=\"rounded-circle avatar-lg img-thumbnail\" src=\"../assets/images/avatar-1.png\" alt=\"\"\r\n                        style={{ \"width\": \" 50px\", \"height\": \"50px\" }} /></div>\r\n                </div>\r\n                <div class=\"flex-grow-1 overflow-hidden\">\r\n                    <h5 class=\"text-truncate font-size-14 mb-1\">{username}</h5>\r\n                    <h6 class=\"text-truncate font-size-12 mb-0\">{fullname}</h6>\r\n                </div>\r\n                <li class=\"list-inline-item px-2 me-2 ms-0\"><button type=\"button\" onClick={()=>rejectFirendRequset(id)}\r\n                    class=\"btn btn-danger avatar-sm rounded-circle\"><span\r\n                        class=\"avatar-title bg-transparent font-size-20\"><FontAwesomeIcon icon={faXmark} /></span></button></li>\r\n                <li class=\"list-inline-item px-2\"><button type=\"button\" onClick={()=>accpetFirendRequset(id)}\r\n                    class=\"btn btn-success avatar-sm rounded-circle\"><span\r\n                        class=\"avatar-title bg-transparent font-size-20\"><FontAwesomeIcon icon={faCheck} /></span></button></li>\r\n            </div>\r\n        </Link></li>\r\n    </>\r\n}\r\n\r\nconst NotificationModal = ({ modal,getChates }) => {\r\n    const user = useContext(UserContext);\r\n    useEffect(() => {\r\n        setModalClasses({\r\n            classOne: 'modal fade show',\r\n            classTwo: 'modal-backdrop fade show',\r\n        });\r\n    }, [])\r\n    const [modalClasses, setModalClasses] = useState({\r\n        classOne: 'modal fade',\r\n        classTwo: 'modal-backdrop fade',\r\n    })\r\n    const closeModal = () => {\r\n        setModalClasses({\r\n            classOne: 'modal fade',\r\n            classTwo: 'modal-backdrop fade',\r\n        });\r\n        setTimeout(() => {\r\n            modal(false)\r\n        }, 300);\r\n    }\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <div tabindex=\"-1\" style={{ \"position\": \"relative\", \"zIndex\": \"1050\", \"display\": \" block\" }} onClick={() => closeModal()}>\r\n                <div class=\"\" >\r\n                    <div class={modalClasses.classOne} role=\"dialog\" tabindex=\"-1\" style={{ \"display\": \"block\" }}  >\r\n                        <div tabindex=\"-1\" class=\"modal-dialog modal-dialog-centered\" role=\"document\" onClick={e => e.stopPropagation()}>\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-body\">\r\n                                    <div class=\"text-center p-4\">\r\n                                        <p class=\"text-muted\">Friend Requests</p>\r\n                                        <div class=\"mt-2\">\r\n                                            <ul class=\"list-inline mb-1\">\r\n                                                {\r\n                                                    user.userData.friendsrequests.map((e, i) => {\r\n                                                        return <FriendRequests id={e._id} username={e.username} fullname={e.fullname} closeModal={closeModal} getChates={getChates} />\r\n                                                    })\r\n                                                }\r\n                                                {user.userData.friendsrequests.length == 0? <h3>No Friend Request</h3>:''}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class={modalClasses.classTwo}></div>\r\n                </div>\r\n            </div>\r\n        </>, document.body\r\n    )\r\n}\r\n\r\nconst RemoveUser = ({ modal,getChates }) => {\r\n    const user = useContext(UserContext);\r\n    useEffect(() => {\r\n        setModalClasses({\r\n            classOne: 'modal fade show',\r\n            classTwo: 'modal-backdrop fade show',\r\n        });\r\n    }, [])\r\n    const [modalClasses, setModalClasses] = useState({\r\n        classOne: 'modal fade',\r\n        classTwo: 'modal-backdrop fade',\r\n    })\r\n    const closeModal = () => {\r\n        setModalClasses({\r\n            classOne: 'modal fade',\r\n            classTwo: 'modal-backdrop fade',\r\n        });\r\n        setTimeout(() => {\r\n            modal(false)\r\n        }, 300);\r\n    }\r\n\r\n    const removefriend = () =>{\r\n        fetch(\"/api/removefriend\",{\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body:JSON.stringify({id:localStorage.getItem('selectedUserId')})\r\n        }).then( async (res)=>{\r\n            if(res.status == 200){\r\n                res = await res.json();\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Friend has be remove',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n                socket = io(ENDPOINT);\r\n                socket.emit(\"remove friend\",localStorage.getItem('selectedUserId'))\r\n                closeModal();\r\n                getChates();\r\n                user.getUserInfo();\r\n                // document.getElementsByClassName(localStorage.getItem('selectedUserId')).classList.add('d-none')\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <div tabindex=\"-1\" style={{ \"position\": \"relative\", \"zIndex\": \"1050\", \"display\": \" block\" }} onClick={() => closeModal()}>\r\n                <div class=\"\" >\r\n                    <div class={modalClasses.classOne} role=\"dialog\" tabindex=\"-1\" style={{ \"display\": \"block\" }}  >\r\n                        <div tabindex=\"-1\" class=\"modal-dialog modal-dialog-centered\" role=\"document\" onClick={e => e.stopPropagation()}>\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-body\">\r\n                                    <div class=\"text-center p-4\">\r\n                                        <h4 class=\"text-muted\">Are you sure you want to remove this user</h4>\r\n                                        <div class=\"mt-4\">\r\n                                        <li class=\"list-inline-item px-2 me-2 ms-0\"><button type=\"button\" \r\n                                            class=\"btn btn-danger avatar-sm rounded-circle\"><span\r\n                                                class=\"avatar-title bg-transparent font-size-20\"><FontAwesomeIcon icon={faXmark} onClick={()=>{closeModal()}}/></span></button></li>\r\n                                        <li class=\"list-inline-item px-2\"><button type=\"button\" onClick={()=>{removefriend()}}\r\n                                            class=\"btn btn-success avatar-sm rounded-circle\"><span\r\n                                                class=\"avatar-title bg-transparent font-size-20\"><FontAwesomeIcon icon={faCheck}  /></span></button></li>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class={modalClasses.classTwo}></div>\r\n                </div>\r\n            </div>\r\n        </>, document.body\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n\r\nexport { NotificationModal,RemoveUser };\r\n","C:\\Deplayment\\chaterFrontend\\src\\components\\ChateBox.jsx",["122","123","124","125","126","127","128","129","130"],[],"C:\\Deplayment\\chaterFrontend\\src\\components\\Tabs.jsx",["131","132","133","134","135","136"],[],{"ruleId":"137","severity":1,"message":"138","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":12},{"ruleId":"137","severity":1,"message":"141","line":14,"column":15,"nodeType":"139","messageId":"140","endLine":14,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":24,"column":13,"nodeType":"144","messageId":"145","endLine":24,"endColumn":15},{"ruleId":"142","severity":1,"message":"146","line":25,"column":51,"nodeType":"144","messageId":"145","endLine":25,"endColumn":53},{"ruleId":"142","severity":1,"message":"146","line":30,"column":18,"nodeType":"144","messageId":"145","endLine":30,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":35,"column":13,"nodeType":"144","messageId":"145","endLine":35,"endColumn":15},{"ruleId":"142","severity":1,"message":"146","line":37,"column":16,"nodeType":"144","messageId":"145","endLine":37,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":42,"column":18,"nodeType":"144","messageId":"145","endLine":42,"endColumn":20},{"ruleId":"142","severity":1,"message":"146","line":62,"column":23,"nodeType":"144","messageId":"145","endLine":62,"endColumn":25},{"ruleId":"147","severity":1,"message":"148","line":68,"column":13,"nodeType":"149","messageId":"145","endLine":68,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":82,"column":13,"nodeType":"149","messageId":"145","endLine":82,"endColumn":30},{"ruleId":"142","severity":1,"message":"143","line":92,"column":43,"nodeType":"144","messageId":"145","endLine":92,"endColumn":45},{"ruleId":"150","severity":1,"message":"151","line":107,"column":43,"nodeType":"152","endLine":107,"endColumn":86},{"ruleId":"153","severity":1,"message":"154","line":22,"column":7,"nodeType":"155","endLine":22,"endColumn":9,"suggestions":"156"},{"ruleId":"142","severity":1,"message":"146","line":34,"column":31,"nodeType":"144","messageId":"145","endLine":34,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":55,"column":43,"nodeType":"144","messageId":"145","endLine":55,"endColumn":45},{"ruleId":"142","severity":1,"message":"143","line":72,"column":27,"nodeType":"144","messageId":"145","endLine":72,"endColumn":29},{"ruleId":"137","severity":1,"message":"157","line":3,"column":39,"nodeType":"139","messageId":"140","endLine":3,"endColumn":45},{"ruleId":"137","severity":1,"message":"158","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":32,"column":43,"nodeType":"152","endLine":32,"endColumn":86},{"ruleId":"137","severity":1,"message":"159","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"160","line":6,"column":16,"nodeType":"139","messageId":"140","endLine":6,"endColumn":20},{"ruleId":"142","severity":1,"message":"146","line":23,"column":27,"nodeType":"144","messageId":"145","endLine":23,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":33,"column":13,"nodeType":"149","messageId":"145","endLine":33,"endColumn":30},{"ruleId":"150","severity":1,"message":"151","line":46,"column":33,"nodeType":"152","endLine":46,"endColumn":77},{"ruleId":"137","severity":1,"message":"161","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":30},{"ruleId":"137","severity":1,"message":"159","line":1,"column":52,"nodeType":"139","messageId":"140","endLine":1,"endColumn":60},{"ruleId":"137","severity":1,"message":"162","line":3,"column":21,"nodeType":"139","messageId":"140","endLine":3,"endColumn":27},{"ruleId":"137","severity":1,"message":"163","line":3,"column":44,"nodeType":"139","messageId":"140","endLine":3,"endColumn":49},{"ruleId":"137","severity":1,"message":"164","line":3,"column":51,"nodeType":"139","messageId":"140","endLine":3,"endColumn":62},{"ruleId":"137","severity":1,"message":"165","line":3,"column":77,"nodeType":"139","messageId":"140","endLine":3,"endColumn":94},{"ruleId":"142","severity":1,"message":"143","line":11,"column":18,"nodeType":"144","messageId":"145","endLine":11,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":33,"column":27,"nodeType":"144","messageId":"145","endLine":33,"endColumn":29},{"ruleId":"166","severity":1,"message":"167","line":42,"column":21,"nodeType":"152","endLine":42,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":47,"column":21,"nodeType":"152","endLine":47,"endColumn":55},{"ruleId":"166","severity":1,"message":"167","line":56,"column":29,"nodeType":"152","endLine":56,"endColumn":261},{"ruleId":"166","severity":1,"message":"167","line":61,"column":29,"nodeType":"152","endLine":61,"endColumn":261},{"ruleId":"166","severity":1,"message":"167","line":66,"column":29,"nodeType":"152","endLine":66,"endColumn":268},{"ruleId":"166","severity":1,"message":"167","line":71,"column":29,"nodeType":"152","endLine":71,"endColumn":112},{"ruleId":"166","severity":1,"message":"167","line":79,"column":107,"nodeType":"152","endLine":79,"endColumn":275},{"ruleId":"166","severity":1,"message":"167","line":83,"column":78,"nodeType":"152","endLine":83,"endColumn":145},{"ruleId":"137","severity":1,"message":"160","line":7,"column":16,"nodeType":"139","messageId":"140","endLine":7,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":37,"column":28,"nodeType":"144","messageId":"145","endLine":37,"endColumn":30},{"ruleId":"142","severity":1,"message":"143","line":51,"column":28,"nodeType":"144","messageId":"145","endLine":51,"endColumn":30},{"ruleId":"142","severity":1,"message":"143","line":62,"column":32,"nodeType":"144","messageId":"145","endLine":62,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":82,"column":25,"nodeType":"149","messageId":"145","endLine":82,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":96,"column":25,"nodeType":"149","messageId":"145","endLine":96,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":105,"column":25,"nodeType":"149","messageId":"145","endLine":105,"endColumn":42},{"ruleId":"142","severity":1,"message":"143","line":167,"column":23,"nodeType":"144","messageId":"145","endLine":167,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":180,"column":49,"nodeType":"144","messageId":"145","endLine":180,"endColumn":51},{"ruleId":"142","severity":1,"message":"143","line":194,"column":23,"nodeType":"144","messageId":"145","endLine":194,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":267,"column":87,"nodeType":"144","messageId":"145","endLine":267,"endColumn":89},{"ruleId":"142","severity":1,"message":"143","line":312,"column":27,"nodeType":"144","messageId":"145","endLine":312,"endColumn":29},{"ruleId":"137","severity":1,"message":"168","line":3,"column":57,"nodeType":"139","messageId":"140","endLine":3,"endColumn":72},{"ruleId":"142","severity":1,"message":"143","line":29,"column":13,"nodeType":"144","messageId":"145","endLine":29,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":48,"column":27,"nodeType":"144","messageId":"145","endLine":48,"endColumn":29},{"ruleId":"166","severity":1,"message":"167","line":65,"column":112,"nodeType":"152","endLine":65,"endColumn":166},{"ruleId":"137","severity":1,"message":"169","line":85,"column":9,"nodeType":"139","messageId":"140","endLine":85,"endColumn":22},{"ruleId":"153","severity":1,"message":"170","line":102,"column":25,"nodeType":"171","endLine":102,"endColumn":44},{"ruleId":"142","severity":1,"message":"143","line":121,"column":29,"nodeType":"144","messageId":"145","endLine":121,"endColumn":31},{"ruleId":"142","severity":1,"message":"146","line":129,"column":33,"nodeType":"144","messageId":"145","endLine":129,"endColumn":35},{"ruleId":"142","severity":1,"message":"146","line":179,"column":32,"nodeType":"144","messageId":"145","endLine":179,"endColumn":34},{"ruleId":"137","severity":1,"message":"172","line":3,"column":18,"nodeType":"139","messageId":"140","endLine":3,"endColumn":29},{"ruleId":"137","severity":1,"message":"173","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":23,"column":33,"nodeType":"144","messageId":"145","endLine":23,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":27,"column":22,"nodeType":"176","messageId":"177","endLine":27,"endColumn":60},{"ruleId":"153","severity":1,"message":"178","line":47,"column":8,"nodeType":"155","endLine":47,"endColumn":10,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":200,"column":37,"nodeType":"152","endLine":200,"endColumn":151},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-dupe-keys","Duplicate key 'confirmButtonText'.","ObjectExpression","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getChates'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'faUser' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'json' is defined but never used.","'createContext' is defined but never used.","'faMoon' is defined but never used.","'faPen' is defined but never used.","'faArrowLeft' is defined but never used.","'faMagnifyingGlass' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'faPaperPlaneTop' is defined but never used.","'seletedUserId' is assigned a value but never used.","Assignments to the 'seletedUserId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'faUserGroup' is defined but never used.","'Form' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [getChates]",{"range":"188","text":"189"},"Update the dependencies array to be: [navigate]",{"range":"190","text":"191"},[739,741],"[getChates]",[1728,1730],"[navigate]"]